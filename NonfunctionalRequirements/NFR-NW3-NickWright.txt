Original: 6/3/19

REQ-ID: NW3
Description: The product shall encrypt UID (Unique Identifier) [for tickets] in Katakana (unicode in DB)
Type: Security
Rationale: A hacker might [brute force] attack using english dictionary file as JTT is a british system
Fit Criterion: The average hacker shall be unable to access ticket information due to this unexpected encryption
Originator: Thomas

Comments: [M814-ModuleChair] Add comments below, making sure to include your initials in [] at the start.
[MG] I don't think the fit criterion is testable as "The average hacker" is undefined. Is there a time-limit or limit to attempts that can be placed cracking an encrypted data item? If these are exceeded then the encryption works - though you can't guard against chance, no matter how small.
[RJE 7th March 2019: The requirement description does sound like a solution to me, perhaps this wouldn't be the case if it had only mentioned encrypting the product ID and not having to use the Katakana syllabary ? Perhaps the fit criteria would be more quantifiable if it stated that the Software Masters security consultant should be unable to access the ticket ID within a certain period of time, or even the ticket ID should be encrypted to the Software Masters company security standards (assuming they have these) ]  

UPDATED: 9/3/19

REQ-ID: NW3
Description: The product shall encrypt UID (Unique Identifier) [for tickets] according to software Masters sensitive data storage 
policy [currently this is to encrypt and decrypt everything in the application (Java) [in Katakana and further encrypted in TwoFish] 
Type: #15 Security
Rationale: A hacker might [brute force] attack using english dictionary file as JTT is a british system; Database encryption is 
notoriously weak and 3rd party DBE is accessible by 3rd party.
Fit Criterion: The potential hacker shall be unable to add, change or access ticket information due to this novel, unexpected and 
secure encryption, even if they download the whole database this information would be useless without the ability to decrypt 
(which remains in the application)

Originator: Thomas and Software Masters sensitive data security expert

Assumptions: Assuming encrypting in Katakana and TwoFish is Legal; Also assuming potential hacker is british/english; Also assuming AES, RSA and 3DESare too insecure to encrypt millions of ticket ID's with.

